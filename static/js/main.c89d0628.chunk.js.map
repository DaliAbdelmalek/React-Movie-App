{"version":3,"sources":["components/card.js","App.js","serviceWorker.js","index.js"],"names":["Card","_this","this","react_default","a","createElement","className","props","tabMovies","filter","el","review","searchStar","name","toUpperCase","includes","searchValue","map","src","img","padEnd","Component","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addName","e","setState","target","value","addImage","addReview","search","remove","class","add","movies","concat","toConsumableArray","state","addplus","star1","star","star2","star3","star4","star5","onChange","type","onClick","components_card","style","margin","placeholder","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c89d0628.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './card.css'\r\nclass Card extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"movies\">\r\n                 {this.props.tabMovies.filter((el)=>{return(el.review<=this.props.searchStar && el.name.toUpperCase().includes(this.props.searchValue.toUpperCase()))}).map((el)=>{\r\n                    return (\r\n                        <div className=\"card\">\r\n                            <img className=\"card-img\" src={el.img} />\r\n                            <p className=\"card-name\">{el.name}</p>\r\n                            <p className=\"card-review\">{''.padEnd(el.review,'â˜†')}</p>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react';\nimport './App.css'\nimport Card from './components/card.js'\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = ({\n      movies: [{\n        name: 'Mission Impossible',\n        img: 'https://is3-ssl.mzstatic.com/image/thumb/Video118/v4/ed/39/36/ed393672-bc1d-270b-9d34-54590ab29fea/pr_source.lsr/268x0w.png',\n        review: 5\n      },\n      {\n        name: 'Mission Glass',\n        img: 'https://www.dvdsreleasedates.com/posters/800/G/Glass-2019-movie-poster.jpg',\n        review: 3\n      },\n      {\n        name: 'X-Men',\n        img: 'https://www.sunrisemedical.eu/getattachment/cd0dc57a-cc2b-4434-a603-8a98ee7ee4af/x-men-the-last-stand-films-about-disability.jpg',\n        review: 2\n      },\n      {\n        name: 'Pikachu',\n        img: 'https://www.cinemaspathegaumont.com/media/movie/9103335/poster/lg/81/film_924228.jpg',\n        review: 1\n      },\n      {\n        name: 'Spongebob',\n        img: 'https://images-na.ssl-images-amazon.com/images/I/61IlFE6yZOL.jpg',\n        review: 3\n      },\n      {\n        name: 'Black Panther',\n        img: 'http://fr.web.img2.acsta.net/pictures/17/10/16/15/40/0883250.jpg',\n        review: 4\n      }],\n      name: '',\n      img: '',\n      review: '',\n      class: 'none',\n      search: '',\n      star:5\n    })\n  }\n\n  addName = (e) => {\n    this.setState  ({\n      name: e.target.value\n    })\n  }\n  addImage = (e) => {\n    this.setState ({\n      img: e.target.value\n    })\n  }\n  addReview = (e) => {\n    this.setState  ({\n      review: e.target.value\n    })\n  }\n  search= (e) => {\n    this.setState  ({\n      search: e.target.value\n    })\n  }\n\n  remove = () => {\n    this.setState  ({\n      class: 'none'\n    })\n  }\n\n  add = () => {\n    this.setState ({\n      movies: [...this.state.movies, { name: this.state.name, img: this.state.img, review: this.state.review }]\n    })\n  }\n\naddplus =()=>{\n  this.setState ({\n    class: 'addmovie'\n  })\n}\nstar1=()=>{\n  this.setState({\n    star:1\n  })\n}\nstar2=()=>{\n  this.setState({\n    star:2\n  })\n}\nstar3=()=>{\n  this.setState({\n    star:3\n  })\n}\nstar4=()=>{\n  this.setState({\n    star:4\n  })\n}\nstar5=()=>{\n  this.setState({\n    star:5\n  })\n}\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"header\">\n          <div className=\"searchBar\">\n            <input onChange={this.search} type=\"text\" className=\"search\" />\n            <span className=\"search-btn\">Search</span>\n          </div>\n          <p className=\"stars\">\n            <i onClick={this.star1} class=\"far fa-star\"></i>\n            <i onClick={this.star2} class=\"far fa-star\"></i>\n            <i onClick={this.star3} class=\"far fa-star\"></i>\n            <i onClick={this.star4} class=\"far fa-star\"></i>\n            <i onClick={this.star5} class=\"far fa-star\"></i>\n          </p>\n        </header>\n        <main>\n          <Card searchStar={this.state.star} tabMovies={this.state.movies} searchValue={this.state.search} />\n          <div onClick={this.addplus} className=\"card kk\" style={{margin: \"20px 0 0 73px\"}}><span className='plus'>+</span></div>\n          <div className={this.state.class}>\n            <input type=\"text\" placeholder=\"Name\" onChange={this.addName} />\n            <input type=\"text\" placeholder=\"URL of image\" onChange={this.addImage} />\n            <input type=\"text\" placeholder=\"Review\" onChange={this.addReview} />\n            <span className=\"annuler\" onClick={this.remove}>X</span>\n            <span className=\"add-m\" onClick={this.add}>ADD MOVIE</span>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}